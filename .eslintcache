[{"/home/emilyf/covid-tracker/src/index.js":"1","/home/emilyf/covid-tracker/src/reportWebVitals.js":"2","/home/emilyf/covid-tracker/src/App.js":"3","/home/emilyf/covid-tracker/src/components/containers/map.js":"4","/home/emilyf/covid-tracker/src/helpers/abbrToState.js":"5","/home/emilyf/covid-tracker/src/components/cards/states.js":"6","/home/emilyf/covid-tracker/src/components/containers/Zoom.js":"7","/home/emilyf/covid-tracker/src/components/containers/countries.js":"8","/home/emilyf/covid-tracker/src/components/containers/states.js":"9","/home/emilyf/covid-tracker/src/components/cards/country.js":"10","/home/emilyf/covid-tracker/src/serviceWorker.js":"11","/home/emilyf/covid-tracker/src/components/containers/MyFeatureLayer.js":"12"},{"size":1154,"mtime":1610660037623,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609438178484,"results":"15","hashOfConfig":"14"},{"size":314,"mtime":1609791474871,"results":"16","hashOfConfig":"14"},{"size":899,"mtime":1609443678348,"results":"17","hashOfConfig":"18"},{"size":1359,"mtime":1609470299946,"results":"19","hashOfConfig":"18"},{"size":2301,"mtime":1610573268808,"results":"20","hashOfConfig":"14"},{"size":1385,"mtime":1609786891228,"results":"21","hashOfConfig":"14"},{"size":2254,"mtime":1610574435353,"results":"22","hashOfConfig":"14"},{"size":2498,"mtime":1610574454719,"results":"23","hashOfConfig":"14"},{"size":846,"mtime":1610573677419,"results":"24","hashOfConfig":"14"},{"size":5253,"mtime":1610140435538,"results":"25","hashOfConfig":"14"},{"size":669,"mtime":1610654613954,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vc5xps",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"o64cfn",{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":4,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/home/emilyf/covid-tracker/src/index.js",[],"/home/emilyf/covid-tracker/src/reportWebVitals.js",[],["55","56"],"/home/emilyf/covid-tracker/src/App.js",[],"/home/emilyf/covid-tracker/src/components/containers/map.js",["57","58","59"],"/home/emilyf/covid-tracker/src/helpers/abbrToState.js",["60","61","62","63"],"function abbrState(input, to){\n\n  var states = {\n    'AZ': 'Arizona',\n    'AL': 'Alabama',\n    'AK': 'Alaska',\n    'AR': 'Arkansas',\n    'CA': 'California',\n    'CO': 'Colorado',\n    'CT': 'Connecticut',\n    'DE': 'Delaware',\n    'FL': 'Florida',\n    'GA': 'Georgia',\n    'HI': 'Hawaii',\n    'ID': 'Idaho',\n    'IL': 'Illinois',\n    'IN': 'Indiana',\n    'IA': 'Iowa',\n    'KS': 'Kansas',\n    'KY': 'Kentucky',\n    'LA': 'Louisiana',\n    'ME': 'Maine',\n    'MD': 'Maryland',\n    'MA': 'Massachusetts',\n    'MI': 'Michigan',\n    'MN': 'Minnesota',\n    'MS': 'Mississippi',\n    'MO': 'Missouri',\n    'MT': 'Montana',\n    'NE': 'Nebraska',\n    'NV': 'Nevada',\n    'NH': 'New Hampshire',\n    'NJ': 'New Jersey',\n    'NM': 'New Mexico',\n    'NY': 'New York',\n    'NC': 'North Carolina',\n    'ND': 'North Dakota',\n    'OH': 'Ohio',\n    'OK': 'Oklahoma',\n    'OR': 'Oregon',\n    'PA': 'Pennsylvania',\n    'RI': 'Rhode Island',\n    'SC': 'South Carolina',\n    'SD': 'South Dakota',\n    'TN': 'Tennessee',\n    'TX': 'Texas',\n    'UT': 'Utah',\n    'VT': 'Vermont',\n    'VA': 'Virginia',\n    'WA': 'Washington',\n    'WV': 'West Virginia',\n    'WI': 'Wisconsin',\n    'WY': 'Wyoming',\n  };\n\n  if (to == 'abbr'){\n    return states.get(input);\n  } else if (to == 'name'){\n    for(let [key, value] of states){\n      if(value == input){\n        return key;\n      }\n    }\n  }\n}\n","/home/emilyf/covid-tracker/src/components/cards/states.js",["64"],"import React, { Component } from 'react';\n\nfunction abbrState(input, to){\n  var states = new Map([\n    ['Arizona', 'AZ'],\n    ['Alabama', 'AL'],\n    ['Alaska', 'AK'],\n    ['Arkansas', 'AR'],\n    ['California', 'CA'],\n    ['Colorado', 'CO'],\n    ['Connecticut', 'CT'],\n    ['Delaware', 'DE'],\n    ['Florida', 'FL'],\n    ['Georgia', 'GA'],\n    ['Hawaii', 'HI'],\n    ['Idaho', 'ID'],\n    ['Illinois', 'IL'],\n    ['Indiana', 'IN'],\n    ['Iowa', 'IA'],\n    ['Kansas', 'KS'],\n    ['Kentucky', 'KY'],\n    ['Louisiana', 'LA'],\n    ['Maine', 'ME'],\n    ['Maryland', 'MD'],\n    ['Massachusetts', 'MA'],\n    ['Michigan', 'MI'],\n    ['Minnesota', 'MN'],\n    ['Mississippi', 'MS'],\n    ['Missouri', 'MO'],\n    ['Montana', 'MT'],\n    ['Nebraska', 'NE'],\n    ['Nevada', 'NV'],\n    ['New Hampshire', 'NH'],\n    ['New Jersey', 'NJ'],\n    ['New Mexico', 'NM'],\n    ['New York', 'NY'],\n    ['North Carolina', 'NC'],\n    ['North Dakota', 'ND'],\n    ['Ohio', 'OH'],\n    ['Oklahoma', 'OK'],\n    ['Oregon', 'OR'],\n    ['Pennsylvania', 'PA'],\n    ['Rhode Island', 'RI'],\n    ['South Carolina', 'SC'],\n    ['South Dakota', 'SD'],\n    ['Tennessee', 'TN'],\n    ['Texas', 'TX'],\n    ['Utah', 'UT'],\n    ['Vermont', 'VT'],\n    ['Virginia', 'VA'],\n    ['Washington', 'WA'],\n    ['West Virginia', 'WV'],\n    ['Wisconsin', 'WI'],\n    ['Wyoming', 'WY']\n  ])\n  if (to === 'abbr'){\n    return states.get(input);\n  } else if (to === 'name'){\n    for(let [key, value] of states){\n      if(value === input){\n        return key;\n      }\n    }\n  }\n}\n\n\nexport default class StateCard extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  render() {\n    let item = this.props.info;\n    if(this.props.status === \"deaths\") {\n      return(\n        <div className=\"state-card\">\n          <h1>{item.state}</h1>\n          <p>Deaths: {item.deaths}</p>\n        </div>\n      );\n    }\n    else if(this.props.status === \"recovered\") {\n      return(\n        <div className=\"state-card\">\n          <h1>{item.state}</h1>\n          <p>Recovered: {item.recovered}</p>\n        </div>\n      );\n    }\n    else {\n      return(\n        <div className=\"state-card\">\n          <h1>{item.state}</h1>\n          <p>Current cases: {item.cases}</p>\n          <p>Population: {item.population}</p>\n        </div>\n      );\n    }\n  }\n};\n",["65","66"],"/home/emilyf/covid-tracker/src/components/containers/Zoom.js",["67","68","69","70","71","72"],"/home/emilyf/covid-tracker/src/components/containers/countries.js",[],"/home/emilyf/covid-tracker/src/components/containers/states.js",[],"/home/emilyf/covid-tracker/src/components/cards/country.js",[],"/home/emilyf/covid-tracker/src/serviceWorker.js",[],"/home/emilyf/covid-tracker/src/components/containers/MyFeatureLayer.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":16},{"ruleId":"81","severity":2,"message":"82","line":17,"column":21,"nodeType":"79","messageId":"83","endLine":17,"endColumn":30},{"ruleId":"81","severity":2,"message":"84","line":26,"column":33,"nodeType":"79","messageId":"83","endLine":26,"endColumn":37},{"ruleId":"77","severity":1,"message":"85","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":56,"column":10,"nodeType":"88","messageId":"89","endLine":56,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":58,"column":17,"nodeType":"88","messageId":"89","endLine":58,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":60,"column":16,"nodeType":"88","messageId":"89","endLine":60,"endColumn":18},{"ruleId":"77","severity":1,"message":"85","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"73","replacedBy":"90"},{"ruleId":"75","replacedBy":"91"},{"ruleId":"77","severity":1,"message":"92","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"81","severity":2,"message":"93","line":5,"column":13,"nodeType":"79","messageId":"83","endLine":5,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":15,"column":5,"nodeType":"96","endLine":15,"endColumn":18},{"ruleId":"81","severity":2,"message":"97","line":16,"column":5,"nodeType":"79","messageId":"83","endLine":16,"endColumn":15},{"ruleId":"81","severity":2,"message":"84","line":21,"column":28,"nodeType":"79","messageId":"83","endLine":21,"endColumn":32},{"ruleId":"81","severity":2,"message":"84","line":22,"column":28,"nodeType":"79","messageId":"83","endLine":22,"endColumn":32},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'WebMap' is defined but never used.","Identifier","unusedVar","no-undef","'ArcGISMap' is not defined.","undef","'view' is not defined.","'abbrState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["98"],["99"],"'Component' is defined but never used.","'ZoomViewModel' is not defined.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'watchUtils' is not defined.","no-global-assign","no-unsafe-negation"]